# Generated by Django 2.2.8 on 2019-12-13 07:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Interesting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='preview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('Subject', models.CharField(default='разное', max_length=60)),
                ('text', models.TextField()),
                ('image_id', models.IntegerField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_read', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='recipes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject', models.CharField(choices=[('recept', 'Протеиновые рецепты'), ('bars', 'Протеиновые батончики'), ('cocktails', 'Протеиновые коктейли'), ('lifestyle', 'ЗОЖ-рецепты')], max_length=50, verbose_name='Тип')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('text', models.TextField()),
                ('image_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('subject', models.CharField(choices=[('body', 'Грудь,Руки,Спина'), ('legs', 'Ноги, Ягодицы'), ('press', 'Пресс'), ('cardio', 'Кардио')], max_length=50, verbose_name='Тип')),
                ('text', models.TextField()),
                ('image_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.CharField(choices=[('gain', 'Набор массы'), ('losing', 'Похудение'), ('maintenance', 'Поддержание')], max_length=50, verbose_name='Цель')),
                ('height', models.PositiveIntegerField(default=0, verbose_name='Рост')),
                ('weight', models.PositiveIntegerField(default=0, verbose_name='Вес')),
                ('age', models.PositiveIntegerField(default=0, verbose_name='Возраст')),
                ('gender', models.CharField(choices=[('male', 'Мужской'), ('female', 'Женский')], max_length=50, verbose_name='Пол')),
                ('activity', models.CharField(choices=[('minimal', 'Минимальная активность'), ('low', 'Cлабый уровень активности'), ('mid', 'Умеренный уровень активности'), ('high', 'Тяжелая или трудоемкая активность'), ('very_high', 'Экстремальный уровень')], max_length=50, verbose_name='Активность')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
